---
title: Variety and Mainstays of the R Developer Community
abstract: The thriving developer community has a significant impact on the widespread
  use of R software. To better understand this community, we conducted a study analyzing
  all R packages available on CRAN. We identified the most popular topics of R packages
  by text mining the package descriptions. Additionally, using network centrality
  measures, we discovered the important packages in the package dependency network
  and influential developers in the global R community. Our analysis showed that among
  the 20 topics identified in the topic model, *Data Import, Export, and Wrangling*,
  as well as *Data Visualization, Result Presentation, and Interactive Web Applications*,
  were particularly popular among influential packages and developers. These findings
  provide valuable insights into the R community.
author:
- name: Lijin Zhang
  affiliation: Graduate School of Education, Stanford University
  orcid: 0000-0002-4222-8850
  email: |
    lijinzhang@stanford.edu
  address: United States
- name: Xueyang Li
  affiliation: |-
    Department of Computer Science and Engineering, University of Notre
    Dame
  email: |
    xli34@nd.edu
  address: United States
- name: Zhiyong Zhang
  affiliation: Department of Psychology, University of Notre Dame
  orcid: 0000-0003-0590-2196
  email: |
    zzhang4@nd.edu
  address: United States
date: '2023-12-18'
date_received: '2021-10-25'
journal:
  firstpage: ~
  lastpage: ~
volume: 15
issue: 3
slug: RJ-2023-060
packages:
  cran: ~
  bioc: ~
draft: no
preview: preview.png
bibliography: pkg.bib
CTV: ~
output:
  rjtools::rjournal_web_article:
    self_contained: no
    toc: no
    legacy_pdf: yes

---

# Introduction

Initially started as a personal project by Ross Ihaka and Robert
Gentleman [@ihaka1996r], R has evolved into one of the most widely used
and powerful software packages in the field of data science. It is used
across a wide range of academic fields and industries. For example,
@lai2019evaluating showed that 58% of the papers from 30 ecology
journals in 2017 reported using R for data analysis. Another example is
Bioconductor [@gentleman2004bioconductor], a popular R software
repository for computational biology and bioinformatics, which has over
2,000 R packages for genetic data analysis. Moreover,
[ggplot2](https://CRAN.R-project.org/package=ggplot2)
[@wickham2011ggplot2], a well-known R package for data visualization,
has been cited more than 30,000 times. Courses teaching R are also in
high demand in data science programs [@zhang2021data]. @fox2016r
analyzed the papers published in the Journal of Statistical Software
(JSS) between 1996 and 2016, and found that 75% of the articles were
about R, which demonstrated the dominance of R software projects in JSS.

The R developer community plays an important role in maintaining a
healthy ecosystem of R packages and increasing R's popularity
([@RJ-2020-028]; [@tippmann2015programming]). The R ecosystem comprises
of the base packages developed by the R Core team and user-contributed
packages [@german2013evolution]. The Comprehensive R Archive Network
(CRAN) is a well-known package repository. @fox2009aspects suggested
that the CRAN package archive is probably the most important driving
force for the growing usage of R. The package system provides essential
tools for users to develop packages and promotes the sharing of
newly-developed methods and ideas throughout the community.
@fox2009aspects found that the growth of CRAN packages from 2000 to 2009
was approximately exponential. Since then, the number of new CRAN
packages has slowed down a bit, but has otherwise maintained a steady
pace [@fox2016r]. As of 27th November 2022, there are 18898 packages
available on CRAN, more than eight times of the number in 2009.

As the number of CRAN packages increases, the flat organization of these
packages [@fox2016r] makes it difficult for user to identify popular and
important packages on CRAN. @RJ-2018-058 suggested that the huge size of
the CRAN package archive has already made it difficult for users to
understand the merits of packages and the relationships among packages.
Although some resources such as CRAN Task Views [@zeileis2005cran] group
packages related to specific topics, they cannot cover the enormous
number of CRAN packages or give an overall view of the various topics
covered by the CRAN packages. Moreover, as the number of CRAN packages
increases, the newly-developed packages are often built upon other
user-contributed packages. It is, therefore, essential to explore the
package dependency network and identify the influential developers who
lead the R ecosystem.

As such, this study aims to conduct a broad survey of the R developer
community. Specifically, the goal of this paper is two-fold: 1) to
investigate the popular topics of the R ecosystem, and 2) to explore the
influential packages and authors in the R developer community.

The large amount of information on CRAN is a challenge but also a great
resource for understanding the R community. To investigate this
community, this paper uses text mining and network analysis techniques,
with a focus on analyzing package descriptions and the relationships
between packages and authors. The paper is structured as follows. First,
we analyze the textual data of CRAN package descriptions to identify the
various topics of the R ecosystem. Second, a package dependency network,
an author collaboration network, and a bipartite network of packages and
authors are built to determine which packages and authors play important
roles based on the network statistics for the development of the R
ecosystem. Finally, we present a detailed discussion of our findings.

# Identifying the Main Topics of the R Packages

Our first goal is to understand what kind of topics and methods are
currently covered in the packages of R. For this purpose, we extracted
the descriptions of all 18898 packages from CRAN on 27th November 2022.
The mean of the length of package descriptions is 60.15 words, ranging
from 1 to 1207 words. Note that data and code of this paper are
available at <https://github.com/zhanglj37/R_Developer_Community>, with
which the results in this article can be replicated. Through text
analysis technique, we explored the frequently used words and phrases to
investigate the focuses of R developers, and conducted topic modeling to
identify the main topics of the R ecosystem.

## Data Cleaning

The pre-processing of the package descriptions includes five steps: 1)
we converted the upper case letters to lower cases, 2) we deleted the
web links, DOI (Digital Object Identifier) links of publications, and
numbers (e.g., *1993*), and 3) we removed the common stopwords (e.g.,
*the, a*) and some commonly-used words with limited meaning (e.g.,
*package, provide, method*). Moreover, to unify different forms of the
same root-words, we further 4) singularized plural nouns using the
[SemNetCleaner](https://CRAN.R-project.org/package=SemNetCleaner)
package [@christensen2019semna], and 5) lemmatized verbs using the
[spacyr](https://CRAN.R-project.org/package=spacyr) package [@spacyr].

![Word cloud of the top 200 frequently used words in the CRAN package
descriptions.](fig/wd_plot2.pdf){#fig:wd_plot width="10cm"}

## Word and Phrase Frequency

In Figure 1, a word cloud depicts the top 200 frequently used words in
the package descriptions. Each of these 200 words was used more than 400
times. Four of them appeared more than 4,000 times (*data, model,
analysis, base*), and *data* is the only one appeared more than 10,000
times. These words (e.g., *data*, *model*) are related to data analysis
and were also commonly used in data science curricula [@zhang2021data].

FigureÂ [2](#fig:freq){reference-type="ref" reference="fig:freq"}
includes the top 30 frequently used one-, two-, and three-word phrases
in the package descriptions, including phrases that are related to
statistical models (e.g., *regression model, structural equation
modeling*), estimation methods (e.g., *least squares, maximum likelihood
estimation*), different types of datasets (e.g., *high dimensional data,
gene expression data*), and other common and general terms in data
science (e.g., *data analysis, variable selection, open source*). We
also explored the frequently used four-word phrases, and the top phrases
include *Markov chain Monte Carlo* (141 times), *genome wide association
study* (51 times), *single cell RNA sequencing* (43 times), *generalized
linear mixed model* (36 times), *cox proportional hazards model* (30
times), and *random effects meta analysis* (15 times). Moreover, we
found two informative six-word phrases that represent the journals that
were commonly mentioned in the package descriptions: *Journal of the
American Statistical Association* (22 times) and *Journal of
Computational and Graphical Statistics* (12 times).

<figure id="fig:freq">

<figcaption>Top 30 frequently used words and phrases in the CRAN package
descriptions.</figcaption>
</figure>

## Topic Modeling

To identify relevant thematic features of the CRAN R packages, we
conducted topic modeling based on the package descriptions using the
[topicmodels](https://CRAN.R-project.org/package=topicmodels)
[@topicmodels] package. We used the Latent Dirichlet allocation (LDA;
[@blei2003latent]) method to reveal the latent structures in R package
descriptions. LDA assumes that each document (i.e., the description
document of each package) is a mixture of topics, and each topic
consists of a mixture of words [@silge2017text].

To fit the model, we first determined the number of topics. For each
specified number of topics, ranging from 2 to 30, we built the LDA
models with 100 different random number seeds to improve the robustness
of results. In each replication, the 5-fold cross-validation technique
was employed. We assessed the performance of the LDA models by
calculating their perplexity under different numbers of topics. A low
perplexity score indicates better model performance
[@bao2014simultaneously]. Results suggest that the best fit to the data
was a model with 19 topics, followed by the 21- and 20-topic models
(FigureÂ [3](#fig:prep_plot){reference-type="ref"
reference="fig:prep_plot"}). In the 100 replications of analysis, the
19-topic model was selected as the best model most frequently, followed
by the 21-, 20-, 18-, and 17-topic models. By exploring the meaning of
each topic in each model, we found that the model with 20 topics offered
the best interpretability. The 21-topic model identified three topics
which are hard to distinguish because they were all about mixed models,
Bayesian analysis, linear regression, and psychometrics. Compared to the
19-topic model, the 20-topic model was easier to interpret because it
clearly separated the topics of *Generalized Linear Modeling and Mixed
Models*, and *Psychometrics*. We also examined the inflection points in
the performance curve (FigureÂ [3](#fig:prep_plot){reference-type="ref"
reference="fig:prep_plot"}). We found that the 9-topic and 10-topic
models could not clearly differentiate many topics, resulting in many
similar topics with overlapping components. Therefore, we finally
adopted the 20-topic model.

The R package [ctv](https://CRAN.R-project.org/package=ctv) (CRAN Task
Views) introduces the relevant packages of 42 topics (e.g., Bayesian
Inference, Chemometrics, Econometrics). We further compared the
identified 20 topics with the topics classified in the CRAN Task Views
and highlighted their connections in
TableÂ [\[tab:topic_cran\]](#tab:topic_cran){reference-type="ref"
reference="tab:topic_cran"}. In detail, the main topics recovered from
the 20-topic LDA model, in no particular order, were listed below.

![Mean perplexities of topic models with different number of
topics.](fig/perp_mean_plot30.pdf){#fig:prep_plot width="8cm"}

::: center
[]{#tab:topic_cran label="tab:topic_cran"} *Note.* NHST = Null
Hypothesis Significance Testing.
:::

#### 1. Supporting Packages

Keywords of this topic include *data, book, support, ISBN(International
Standard Book Number), tool*, and *publication*. This topic pertains to
packages that offer supporting functions for other packages (e.g.,
[iemisc](https://CRAN.R-project.org/package=iemisc)) and/or provide
supplementary materials (e.g., datasets) for books, courses, and other
packages (e.g., [EnvStats](https://CRAN.R-project.org/package=EnvStats),
[AER](https://CRAN.R-project.org/package=AER),
[uwo4419](https://CRAN.R-project.org/package=uwo4419),
[ACSWR](https://CRAN.R-project.org/package=ACSWR),
[mosaic](https://CRAN.R-project.org/package=mosaic)).

#### 2. Causal Inference

This topic deals with causal inference, and its keywords include
*effect, treatment, causal, outcome, propensity*, and *intervention*.
Packages of this topic are related to the CRAN Task View of [Causal
Inference](https://cran.r-project.org/web/views/CausalInference.html).
Example packages are [CBPS](https://CRAN.R-project.org/package=CBPS)
which contains methods for moments-based propensity score estimation,
[BCEE](https://CRAN.R-project.org/package=BCEE) for Bayesian Causal
Effect Estimation, and
[CausalGAM](https://CRAN.R-project.org/package=CausalGAM) for estimation
of causal effects with generalized additive models.

#### 3. Numerical Mathematics

Keywords of this topic include *matrix, sparse, covariance, correlation,
vector, row, column*, and *decomposition*. It is related to a CRAN Task
View of [Numerical
Mathematics](https://cran.r-project.org/web/views/NumericalMathematics.html).
Packages identified by this topic include
[Matrix](https://CRAN.R-project.org/package=Matrix), a core package for
sparse and dense matrix classes and methods,
[PRIMME](https://CRAN.R-project.org/package=PRIMME), an R interface to a
C library for computing eigenvalues,
[SparseM](https://CRAN.R-project.org/package=SparseM), a package with
sparse linear algebra functions.

#### 4. Classification

This topic is about classification and includes keywords such as
*variable, split, random, forest, tree, category*, and *feature*.
Example packages include
[randomForest](https://CRAN.R-project.org/package=randomForest) for
classification based on a forest of trees,
[tree](https://CRAN.R-project.org/package=tree) containing functions for
classification and regression trees,
[rpart](https://CRAN.R-project.org/package=rpart) for recursive
partitioning and regression trees, and
[C50](https://CRAN.R-project.org/package=C50) for fitting C5.0
classification trees and rule-based models. Some of the packages
identified by this topic can be found in the CRAN Task View of [Machine
Learning and Statistical
Learning](https://cran.r-project.org/web/views/MachineLearning.html).

#### 5. Regression Analysis and Regularization

This topic is about regression analysis and regularization, with words
such as *linear, regression, model, L1, lasso, ridge, shrinkage,
procedure*, and *regularization* appearing with high probability. It is
related to the packages for regularization methods and regression models
(e.g., [glmnet](https://CRAN.R-project.org/package=glmnet) for lasso and
elastic-net regularized generalized linear models (GLMs),
[penalized](https://CRAN.R-project.org/package=penalized) for applying
ridge and lasso regularization in GLMs and Cox proportional hazards
models, and [bravo](https://CRAN.R-project.org/package=bravo) for
Bayesian variable selection with ultra-high dimensional linear
regression models.).

#### 6. Genetics

Keywords of this topic include terms related to genetics, such as *gene,
RNA (Ribonucleic Acid), DNA (DeoxyriboNucleic Acid), sequence, cell*,
and *phenotype*. This topic identifies the packages for analyzing
biological data, especially genetic data (e.g.,
[jetset](https://CRAN.R-project.org/package=jetset),
[Seurat](https://CRAN.R-project.org/package=Seurat),
[scBio](https://CRAN.R-project.org/package=scBio)).

#### 7. Datasets

High probability words of this topic include *data, survey,
questionnaire, sample, collection, census*, and *report*. This topic is
mainly about a special kind of packages for providing datasets
(especially survey data) instead of functions for statistical methods.
For example, spiR is for social progress index data,
[PakPMICS2018](https://CRAN.R-project.org/package=PakPMICS2018) is for
survey data of a specific project conducted from 2017 to 2018,
[USpopcenters](https://CRAN.R-project.org/package=USpopcenters) is about
united stats centers of population data.

#### 8. Cluster Analysis and Network Analysis

Keywords of this topic are related to two sub-topics. First, *network,
gaussian, graphical, node, edge*, and *igraph* are commonly used in
network analysis. Example packages include
[igraph](https://CRAN.R-project.org/package=igraph) and
[sna](https://CRAN.R-project.org/package=sna). Second, *cluster, class,
kernel* are relevant to Cluster Analysis. Example packages include
[cluster](https://CRAN.R-project.org/package=cluster),
[kml](https://CRAN.R-project.org/package=kml) for implementing k-means
clustering on longitudinal data,
[flexclust](https://CRAN.R-project.org/package=flexclust) for providing
flexible cluster algorithms. Cluster analysis and network analysis were
identified in one topic perhaps because there are some packages for
clustering based on correlation matrices and network modeling (e.g.,
[DirectedClustering](https://CRAN.R-project.org/package=DirectedClustering),
[linkcomm](https://CRAN.R-project.org/package=linkcomm),
[clusterGeneration](https://CRAN.R-project.org/package=clusterGeneration)).

#### 9. Machine Learning

With keywords such as *algorithm, machine, learning, training*, and
*prediction*, this topic is mainly about machine learning. The CRAN Task
View of [Machine Learning and Statistical
Learning](https://cran.r-project.org/web/views/MachineLearning.html)
lists and classifies the packages of this topic, for example, packages
for neural networks, deep learning (e.g.,
[RcppDL](https://CRAN.R-project.org/package=RcppDL),
[deepnet](https://CRAN.R-project.org/package=deepnet)). Some packages
are related to both this topic and the topic of regularization (e.g.,
bmrm). Courses of this topic are also very common in data science
programs, including *Neural Networks and Deep Learning*, and *Machine
Learning and Big Data* [@zhang2021data].

#### 10. Null Hypothesis Significance Testing (NHST) and Multiple Comparison

This topic encompasses NHST and Multiple Comparison, and its keywords
include *test, hypothesis, null, multiple, comparison*, and
*significance*. Relevant packages include
[onewaytests](https://CRAN.R-project.org/package=onewaytests) for NHST,
[PMCMRplus](https://CRAN.R-project.org/package=PMCMRplus) and
[conover.test](https://CRAN.R-project.org/package=conover.test) for
multiple comparisons among multiple groups.

#### 11. Probability Distributions and Bayesian Analysis

This topic centers around the word *distribution* and includes other
relevant terms such as *probability, binomial, poisson, density,
Bayesian, MCMC (Markov chain Monte Carlo), chain, prior, posterior*, and
*sampler*. Probability and Bayesian analysis were identified in one
topic because they share the main keyword *distribution* (i.e.,
probability distribution, prior distribution, and posterior
distribution). Example packages include
[extraDistr](https://CRAN.R-project.org/package=extraDistr) for various
univariate and multivariate distributions,
[gnorm](https://CRAN.R-project.org/package=gnorm) for generalized normal
or exponential power distributions,
[bayesmix](https://CRAN.R-project.org/package=bayesmix) for Bayesian
mixture models, and [mcmc](https://CRAN.R-project.org/package=mcmc). The
CRAN Task Views of [Probability
Distributions](https://cran.r-project.org/web/views/Distributions.html)
and [Bayesian](https://cran.r-project.org/web/views/Bayesian.html)
provided a detailed summary of packages related to this topic.

#### 12. Color Patterns and R Objects

Keyword of this topic include *class, object, s4*, and*r6* which are
related to R objects, and *color, png, image*, and *palettes* which are
about visualization. For the R objects, example packages are
[R6](https://CRAN.R-project.org/package=R6),
[R62S3](https://CRAN.R-project.org/package=R62S3), and
[fastdigest](https://CRAN.R-project.org/package=fastdigest). For the
visualization, most packages identified by this topic are designed to
provide color patters for plotting (e.g.,
[colormap](https://CRAN.R-project.org/package=colormap),
[ggpattern](https://CRAN.R-project.org/package=ggpattern)). Package
[ggplot2](https://CRAN.R-project.org/package=ggplot2) is also identified
by this topic, but its relationship with the topic 18 (Data
Visualization, Result Presentation, and Interactive Web Applications) is
higher than its relationship with this topic.

#### 13. Phylogenetics

This topic is mainly about phylogenetics, with high probability words
including *phylogenetic, specie, signal, taxonomic, animal, pedigree*,
and *biodiversity*. Packages related to this topic include
[phytools](https://CRAN.R-project.org/package=phytools) which provides
functions for phylogenetic analysis,
[geiger](https://CRAN.R-project.org/package=geiger) for fitting
macroevolutionary models to phylogenetic trees, and
[phylosignal](https://CRAN.R-project.org/package=phylosignal) for
exploring the phylogenetic signal. The CRAN Task View
[Phylogenetics](https://cran.r-project.org/web/views/Phylogenetics.html)
also summarized packages related to this topic.

#### 14. Time Series Analysis

This topic is mainly about time series analysis. The high probability
words associated with this topic include *time, series, change, dynamic,
forecast, growth, trend*, and *lag*. There is a CRAN Task View of this
topic that introduces many packages for handling time series data, for
example, [tseries](https://CRAN.R-project.org/package=tseries) for time
series analysis, and
[forecast](https://CRAN.R-project.org/package=forecast) that provides
forecasting functions for time series models.

#### 15. Data Import, Export, and Wrangling

This topic includes keywords such as *read, load, import, write,
convert*, and *create*, which are commonly-used verbs for naming R
functions for data import, export and wrangling. Example packages
include
[asciiSetupReader](https://CRAN.R-project.org/package=asciiSetupReader),
which can read fixed-width ASCII data files,
[adfExplorer](https://CRAN.R-project.org/package=adfExplorer), which can
import and export Amiga disk files, and
[dplyr](https://CRAN.R-project.org/package=dplyr), \"a grammar of data
manipulation.\"

#### 16. Computational Efficiency

This topic is related to computational efficiency, with keywords
including *run, C++, fast, efficient, Rcpp, efficient*, and *parallel*.
Many packages associated with this topic call compiled C++ code from R
to improve performance (e.g.,
[Rcpp](https://CRAN.R-project.org/package=Rcpp)), and provide utilities
for parallel computation (e.g.,
[future.callr](https://CRAN.R-project.org/package=future.callr),
[foreach](https://CRAN.R-project.org/package=foreach),
[doParallel](https://CRAN.R-project.org/package=doParallel)).

#### 17. Experimental Design and Clinical Trails

This topic focuses on the design and data analysis of experiments and
clinical trials. High probability words include *design, treatment,
control, trial, clinical, sample, size, endpoint, stage, dose*, and
*experimental*. The CRAN Task Views of [Clinical Trial
Design](https://cran.r-project.org/web/views/ClinicalTrials.html) and
[Experimental
Design](https://cran.r-project.org/web/views/ExperimentalDesign.html)
summarize two lists of R packages concerning this topic. Here we listed
some example packages such as
[TrialSize](https://CRAN.R-project.org/package=TrialSize) for sample
size determination in clinical research, and visit for phase I
dose-escalation study design.

#### 18. Data Visualization, Result Presentation, and Interactive Web Applications

Packages and keywords of this topic can be classified into three
sub-topics. First, keywords such as *ggplot2, color, graph, image*, and
*plot* are related to data visualization. Example packages include
[ggplot2](https://CRAN.R-project.org/package=ggplot2) and
[lattice](https://CRAN.R-project.org/package=lattice). The second
sub-topic is about presenting results, with keywords such as *table,
chart*, and *figure*. Other keywords include *format, html, document,
markdown, rmarkdown*, and *latex* which are mainly about R markdown
tools for generating dynamic reports. Example packages are R
markdown-related tools including
[knitr](https://CRAN.R-project.org/package=knitr) and
[bookdown](https://CRAN.R-project.org/package=bookdown), and formatting
tools such as [styler](https://CRAN.R-project.org/package=styler) and
[pander](https://CRAN.R-project.org/package=pander). The third sub-topic
relates to using R to build interactive web applications. Words relevant
to this sub-topic include *shiny, widget, web*, and *XML*, and example
packages include [shiny](https://CRAN.R-project.org/package=shiny) and
[webshot](https://CRAN.R-project.org/package=webshot).

In addition, there are many packages related to more than one sub-topic.
For example, [ANOVAShiny](https://CRAN.R-project.org/package=ANOVAShiny)
was built based on
[rmarkdown](https://CRAN.R-project.org/package=rmarkdown) and
[shiny](https://CRAN.R-project.org/package=shiny), and
[Factoshiny](https://CRAN.R-project.org/package=Factoshiny) was
developed with [shiny](https://CRAN.R-project.org/package=shiny) and
[ggplot2](https://CRAN.R-project.org/package=ggplot2) for conducting
factorial analysis and drawing graphs with a shiny application. There
are also corresponding lists of this topic on CRAN Task Views, and
courses in data science programs (e.g., *Data Visualization*, *Data
Presentation and Visualization with R*; [@zhang2021data]).

#### 19. Generalized Linear Models and Mixed Models

This topic is related to generalized linear modeling, with keywords such
as *model, regression, linear, fit, mixed, logistic*, and *GLM
(Generalized Linear Modeling)*. Packages associated with this topic
include [dglm](https://CRAN.R-project.org/package=dglm) for building
double generalized linear models,
[brms](https://CRAN.R-project.org/package=brms) for Bayesian Regression
Models, [nlme](https://CRAN.R-project.org/package=nlme) for linear mixed
models (LMMs), and [mbest](https://CRAN.R-project.org/package=mbest) for
large nested LMMs.

#### 20. Psychometrics

The high probability words related to this topic include *factor, item,
response, latent, IRT (Item Response Theory)*, and *choice*. There is a
detailed list on the CRAN Task Views about this topic. Here we listed
some example packages: [mirt](https://CRAN.R-project.org/package=mirt)
for multidimensional item response theory,
[difR](https://CRAN.R-project.org/package=difR) for detecting
differential item functioning, and
[CDM](https://CRAN.R-project.org/package=CDM) for cognitive diagnosis
models.

# Identifying Key Packages and Key Package Developers

To investigate the key packages contributing to the R ecosystem and the
notable authors who significantly support the R community, we conducted
network analysis. We extracted package dependency and authorship
information from CRAN and used
[cranly](https://CRAN.R-project.org/package=cranly) [@cranly] and
[igraph](https://CRAN.R-project.org/package=igraph) [@csardi2006igraph]
to build three networks: 1) a package dependency network, 2) an author
collaboration network, and 3) a bipartite network of packages and
authors. Influential nodes were identified in these three networks. We
first introduce the one-mode network (i.e., network with one type of
node) of packages and authors below.

The R package dependency network was built based on the CRAN R packages
and their dependent packages, including the base and recommended R
packages that are included in the default installation of R. It is a
directed and weighted network, and a sub-graph is presented in
FigureÂ [\[fig:networka\]](#fig:networka){reference-type="ref"
reference="fig:networka"}. Specifically, the arrow from package A to
package B indicates that A depends on, imports, suggests, link to, or is
enhanced by B. TableÂ [1](#tab:connections){reference-type="ref"
reference="tab:connections"} presents the detailed definitions and
frequencies of these relationships [@R]. We assigned the weights of
edges as $5, 4, 3, 2,$ and $1$ for the relationships of *depends,
imports, suggests, links to*, and *enhances*, respectively.

We tested a different weight scheme $(3, 2, 1, 1, 1)$ and found that the
results were robust, with correlations of influence scores exceeding
.95. The top packages identified were also similar. Hence, we report
results based on the $(5, 4, 3, 2, 1)$ weight scheme in this paper.

For the undirected author collaboration network (e.g.,
FigureÂ [\[fig:networkb\]](#fig:networkb){reference-type="ref"
reference="fig:networkb"}), the edge between two nodes indicates that
they have co-authored in at least one package. The weights of edges
denote the number of packages co-authored by the corresponding two
authors.

::: center
[]{#tab:connections label="tab:connections"}

::: {#tab:connections}
  Dependency   Definition                                                            Frequency            
  ------------ --------------------------------------------------------------------- ----------- -- -- -- --
  Depends      B will be attached when attaching A                                   10523                
  Imports      The namespace of B will be imported when attaching A                  87328                
  Suggests     B is used on in the examples, tests, or vignettes of A                54991                
  Links to     A uses the header files in B to compile its C or C++ code             5153                 
  Enhances     B provides methods for classes in A, or helps handling objects in A   558                  

  : Types of Package Dependencies.
:::
:::

<figure>
<div class="center">

</div>
<p><span> <em>Note.</em> The sizes of nodes represent the in-degree /
degree of nodes. In the author collaboration network, the edge width
reflects the weight. In the package dependency network, the color
indicates the weight. "The dark edges represent
<span><em>depends</em></span>, medium dark edges represent
<span><em>imports</em></span>, the lightest edges represent
<span><em>suggests</em></span>. Relationships of <span><em>linking
to</em></span> and <span><em>enhances</em></span> are not included in
this sub-graph. </span></p>
<figcaption>Networks of a subset of nodes with the highest
degrees.</figcaption>
</figure>

## Measures of Influence

We focused on the following commonly used measures for evaluating node
(a package or an author) influence in the one-mode network
([@jain2020identification]; [@morone2015influence];
[@salavaty2020integrated]; [@wang2017ranking]):

-   Local structure information: Degree;

-   Global structure information: Betweenness [@freeman1978centrality];

-   Algorithm based on random walk: Eigenvector centrality
    [@bonacich1972factoring] and PageRank [@page1999pagerank];

#### Degree and In-degree

Degree is the number of direct connections between nodes. For the
directed package dependency network, in-degree indicates how many
packages this package enhances, or is depended on, imported, suggested,
or linked by. For the undirected author collaboration network, degree is
the number of collaborators.

#### Betweenness Centrality

Betweenness quantifies how important a node is as a mediator between two
other nodes. Given a network, the betweenness centrality of node $i$ can
be calculated as [@freeman1978centrality]:

$$C_{Bet}(i)= \sum_{s\neq i \neq t} \frac{d_{s,t}(i)}{d_{s,t}}$$ where
$d_{s,t}$ denotes the number of shortest paths from node $s$ to node
$t$, and $d_{s,t}(i)$ is the number of shortest paths between node $s$
and node $t$ going through node $i$.

#### Eigenvector Centrality

A node with a small degree may have high eigenvector centrality
[@bonacich1972factoring] if it is connected with important nodes. In
other words, this index considers the importance of neighbors when
evaluating the centrality of a node.

Let $A = (a_{i,j})$ be the adjacency matrix of a graph, where $a_{i,j}$
represents the connection between node $i$ and $j$. The eigenvector
centrality of node $i$ is given by [@bonacich2007some]:

$$C_{Eig}(i)= \frac{1}{\lambda} \sum_j a_{i,j} \, C_{Eig}(j)$$ where
$\lambda$ is a non-zero eigenvalue. This can also be expressed in the
matrix form:

$$\lambda C_{Eig} = C_{Eig} A$$ where $C_{Eig}$ is the eigenvector for
the adjacency matrix $A$ given eigenvalue $\lambda$.
@bonacich1972factoring suggested to choose the largest value of
$\lambda$ for measuring centralities.

#### PageRank

PageRank is a variant of eigenvector centrality. It is an algorithm
developed by Google to rank web pages [@page1999pagerank], and is
primarily used for directed networks. Given a weighted network, it can
be calculated as:
$$%PR(i)= k \sum_j a_{i,j} \frac{PR(j)}{C_{Out}(j)} + 1-k
PR(i)= \alpha \sum_j W_{j,i}PR(j) + (1-\alpha)PR^0(i)$$ where $PR(i)$
and $PR(j)$ are the PageRank of node $i$ and $j$, respectively. Besides,
$PR^0(i)$ is typically set as $\frac{1}{N}$ where $N$ is the number of
nodes, $\alpha$ is the damping factor assigned to the random walk, and
$W_{j,i}$ is the normalized edge weight from node $j$ to $i$:
$$W_{j,i} = \frac{w_{j,i}}{\sum_t w_{j,t}}$$ where $w_{j,i}$ is the edge
weight from node $j$ to node $i$.

## Bipartite Network

A bipartite network of authors and packages was built using the
authorship information. The weight of an edge was assigned as 3 if the
author is the maintainer of the package, and 1 otherwise
(FigureÂ [4](#fig:bipar){reference-type="ref" reference="fig:bipar"}).
Unlike the one-mode networks, which focus on either packages or authors,
the bipartite network captures both the relationships between authors
and packages and the collaborations among authors. As shown in
FigureÂ [5](#fig:net_illu){reference-type="ref"
reference="fig:net_illu"}, the same author relationship configuration
could be represented by two different bipartite networks. Therefore, we
employed the bipartite network to gain more insights into the
influential authors using the BiRank statistic.

<figure id="fig:bipar">
<div class="center">
<img src="fig/plot_bipar.png" style="width:11cm" />
</div>
<p><span> <em>Note.</em> Nodes on the left are 15 packages with the
highest in-degrees in the package dependency network, nodes on the right
are 15 authors with the highest degrees in the author collaboration
network. A bold line indicates that the corresponding author is the
maintainer of the corresponding package. </span></p>
<figcaption>A Bipartite network of selected R packages and
authors.</figcaption>
</figure>

#### BiRank

@aronson2020comparing compared different centrality measures for the
bipartite network and recommended the BiRank and CoHITS indexes. For our
network, the BiRank index exhibited a high correlation with the CoHITS
index ($r=.860$). The top 50 authors identified by these two measures
are the same, with only minor variations in their ranking. Consequently,
we only reported the results of the BiRank index [@he2016birank].
Similar to PageRank, the BiRank index assumes that the ranking of nodes
should be related to the ranking of the neighbors. Namely, an author
would be ranked high if his or her neighbor packages are important.

Let $A = (a_{i,j})$ be the adjacency matrix of a bipartite graph with
two types of nodes $u_i (i = 1, \ldots, I)$ and
$p_j (j = 1, \ldots, J)$, the BiRank value for node $u_i$ is given by:
$$BR(u_i) = \alpha \sum_{j}a_{i,j}\frac{BR(p_j)}{\sqrt{C_{wDeg}(u_i)} \sqrt{C_{wDeg}(p_j)}} + (1-\alpha)BR^0(u_i)$$
where $C_{wDeg}(u_i)$ and $C_{wDeg}(p_j)$ are the weighted degrees of
node $u_i$ and $p_j$. Similar to the PageRank index, $\alpha$ is the
damping factor, and $BR^0(u_i)$ is the prior belief of the importance of
node $u_i$.

<figure id="fig:net_illu">

<figcaption>Relationships between the bipartite network and the author
collaboration network.</figcaption>
</figure>

## Results

The centrality measures of these three networks were calculated using
the R package [igraph](https://CRAN.R-project.org/package=igraph)
[@csardi2006igraph],
[influential](https://CRAN.R-project.org/package=influential)
[@salavaty2020integrated], and
[birankr](https://CRAN.R-project.org/package=birankr) [@birankr].

#### Package Dependency Network

TableÂ [\[tab:rank_pkg\]](#tab:rank_pkg){reference-type="ref"
reference="tab:rank_pkg"} presents the top 50 packages according to
various centrality measures. Results show that the number of packages
depending (i.e., depends, imports, suggests, linking to, or reverse
enhances) on [knitr](https://CRAN.R-project.org/package=knitr) is the
greatest. This is probably because
[knitr](https://CRAN.R-project.org/package=knitr) package can help
generate R package vignettes, and is therefore suggested by numerous
packages. In other words, these packages are using
[knitr](https://CRAN.R-project.org/package=knitr) in developing and
publishing the package, instead of extending its functionality.
Additionally, [knitr](https://CRAN.R-project.org/package=knitr) is a
comprehensive package related to the topic of *Data Visualization,
Result Presentation, and Interactive Web Applications*. It can help
generate dynamic reports. Many packages of this topic were built based
on [knitr](https://CRAN.R-project.org/package=knitr), such as
[bookdown](https://CRAN.R-project.org/package=bookdown) for writing
books and technical documents. The package with the highest betweenness
([ggplot2](https://CRAN.R-project.org/package=ggplot2)) also suggests
[knitr](https://CRAN.R-project.org/package=knitr). Compared to
[knitr](https://CRAN.R-project.org/package=knitr),
[ggplot2](https://CRAN.R-project.org/package=ggplot2) demonstrates
greater influence as a mediation package. It suggests and imports many
important R packages, and is also depended by numerous packages. Unlike
the degree and betweenness centralities, the PageRank index by
considering the importance of neighbor nodes prioritizes some packages
with relatively low connections. For example, the ranking of tools (a
base R package) is 55 using in-degree, while 8 using PageRank. This is
because tools is imported by some influential packages such as
[rmarkdown](https://CRAN.R-project.org/package=rmarkdown) and
[shiny](https://CRAN.R-project.org/package=shiny).

Among these influential packages in
TableÂ [\[tab:rank_pkg\]](#tab:rank_pkg){reference-type="ref"
reference="tab:rank_pkg"}, 54 packages are ranked as top 50 by at least
two indexes
(TableÂ [\[tab:rank2_pkg\]](#tab:rank2_pkg){reference-type="ref"
reference="tab:rank2_pkg"}), including 10 out of the 29 base and
recommended R packages.

Apart from the base and recommended R packages, other important CRAN
packages concentrate mainly on three topics: *Data Import, Export, and
Wrangling* (e.g., [dplyr](https://CRAN.R-project.org/package=dplyr),
[tibble](https://CRAN.R-project.org/package=tibble),
[tidyr](https://CRAN.R-project.org/package=tidyr),
[data.table](https://CRAN.R-project.org/package=data.table),
[readr](https://CRAN.R-project.org/package=readr)), *Data Visualization,
Result Presentation, and Interactive Web Applications* (e.g.,
[knitr](https://CRAN.R-project.org/package=knitr),
[ggplot2](https://CRAN.R-project.org/package=ggplot2),
[rmarkdown](https://CRAN.R-project.org/package=rmarkdown), and
*Supporting Packages* (e.g.,
[testthat](https://CRAN.R-project.org/package=testthat),
[purrr](https://CRAN.R-project.org/package=purrr)). Other packages are
related to topics like *Computational Efficiency* (e.g.,
[Rcpp](https://CRAN.R-project.org/package=Rcpp),
[RcppArmadillo](https://CRAN.R-project.org/package=RcppArmadillo)),
*Probability Distributions* (e.g.,
[mvtnorm](https://CRAN.R-project.org/package=mvtnorm)), *Bayesian
Estimation and Network Analysis* (e.g.,
[igraph](https://CRAN.R-project.org/package=igraph)), and *Access to Web
and Services* (e.g., [httr](https://CRAN.R-project.org/package=httr)).
These packages are ranked as top influential packages, likely because
they provide basic and comprehensive functions for important topics. A
lot of packages have been developed for specific goals based on them.
For example, [ggplot2](https://CRAN.R-project.org/package=ggplot2) is a
well-known package for data visualization. Many packages were developed
based on [ggplot2](https://CRAN.R-project.org/package=ggplot2) to
enhance its visualization functionality, like ggROC specifically for
plotting ROC curve, and
[ggbreak](https://CRAN.R-project.org/package=ggbreak) for setting axis
breaks.

We also investigated the relationships between the influence scores and
the number of downloads of packages. The downloads of CRAN packages on
the RStudio mirror from 2021-11-01 to 2022-10-31 were obtained using the
[cranlogs](https://CRAN.R-project.org/package=cranlogs) [@cranlogs]
package. Note that the base and recommended R packages were not included
when measuring downloads since they are part of R installation. The
correlations of the downloads and the five indexes range from
$.337-.465$.

![Top 50 packages downloaded on the RStudio mirror from 2021-11-01 to
2022-10-31.](fig/downloads_50_plot.pdf){#fig:download width="9cm"}

#### Author Collaboration Network

TableÂ [\[tab:rank_aut\]](#tab:rank_aut){reference-type="ref"
reference="tab:rank_aut"} lists the top 50 authors ranked by various
indexes. RStudio is identified as the most influential author according
to eigenvector and PageRank. Hadley Wickham and R Core demonstrated
greatest influence based on degree and betweenness, respectively.
TableÂ [\[tab:rank2_aut\]](#tab:rank2_aut){reference-type="ref"
reference="tab:rank2_aut"} shows that 46 authors are ranked among the
top 50 by at least two indexes, including organizations such as [R
Core](https://www.r-project.org/contributors.html), RStudio, and Google
Inc., as well as individual scientists affiliated with these
organizations. FigureÂ [4](#fig:bipar){reference-type="ref"
reference="fig:bipar"} reveals that, unlike the base packages, most
organizational authors of CRAN packages are not maintainers or creators.
Instead, organizations such as RStudio acts as copyright holders and
funders, and the R Core team often works as a contributor.

The results also suggest that different indexes prioritize different
aspects of influence. Authors with limited but influential collaborators
may not rank among the top 50 based on the degree centrality, but can be
revealed using the eigenvector centrality and PageRank
(TableÂ [\[tab:rank_aut\]](#tab:rank_aut){reference-type="ref"
reference="tab:rank_aut"}).

TableÂ [\[tab:rank2_aut\]](#tab:rank2_aut){reference-type="ref"
reference="tab:rank2_aut"} presents the top downloaded packages of
influential authors. Many packages have been identified as the
influential packages listed in
TableÂ [\[tab:rank_pkg\]](#tab:rank_pkg){reference-type="ref"
reference="tab:rank_pkg"}. FigureÂ [7](#fig:cor_aut){reference-type="ref"
reference="fig:cor_aut"} shows the collaboration heatmap among these
authors, revealing intensive collaboration among influential
organizations and authors. The heatmap shows three main clusters of
author collaboration. Most authors at the upper left corner of the
heatmap (e.g., Dirk Eddelbuettel) have the same two packages
[DescTools](https://CRAN.R-project.org/package=DescTools) (an R package
for descriptive statistics) and
[fortunes](https://CRAN.R-project.org/package=fortunes) (an R package of
collected wisdom from the R community). Their co-authored packages are
mainly about two main topics on *Data Import, Export, and Wrangling*
(e.g., [data.table](https://CRAN.R-project.org/package=data.table),
[MASS](https://CRAN.R-project.org/package=MASS)) and *Data
Visualization* (e.g., [rgl](https://CRAN.R-project.org/package=rgl),
[plotrix](https://CRAN.R-project.org/package=plotrix)). Authors in the
middle of the figure are clustered together because they co-authored the
[broom](https://CRAN.R-project.org/package=broom) package, a package for
converting objects into tidy tibbles. Authors in the lower-right corner
of the matrix co-authored many packages related to the *Data
Visualization, Result Presentation, and Interactive Web Applications*
topic (e.g., [knitr](https://CRAN.R-project.org/package=knitr),
[bookdown](https://CRAN.R-project.org/package=bookdown),
[shiny](https://CRAN.R-project.org/package=shiny)), many of whom are
from RStudio. These results align with to the finding in the package
dependency network that many influential packages are related to the
*Data Import, Export, and Wrangling* and *Data Visualization, Result
Presentation, and Interactive Web Applications* topics.

<figure id="fig:cor_aut">
<embed src="fig/cor_aut.pdf" style="width:15cm" />
<p><span> <em>Note.</em> Color denotes the number of co-authored
packages between two authors. </span></p>
<figcaption>Collaboration heatmap of the influential authors identified
in the collaboration network.</figcaption>
</figure>

#### Bipartite Network

The BiRank values demonstrate small to medium correlations with the
indexes used in the one-mode author collaboration network
($r=.179-.427$). The top 50 influential authors and their ranking are
different from the results of the author collaboration network.
Twenty-three of the top 50 authors are not ranked as top 50 by any index
in the collaboration network
(TableÂ [\[tab:rank_bi_aut\]](#tab:rank_bi_aut){reference-type="ref"
reference="tab:rank_bi_aut"}). Compared to the influential authors in
the collaboration network, these 23 authors' packages have relatively
few number of authors. But the number of their packages is high.

The most influential author identified by BiRank is Dirk Eddelbuettel,
followed by Hadley Wickham, RStudio, StÃ©phane Laurent, and Scott
Chamberlain. By contrast, in the one-mode network, StÃ©phane Laurent is
not in the top 50 author lists based on degree, betweenness, and
eigenvector. Scott Chamberlain is also not in the top 50 author lists
based on degree and eigenvector. This is because many of their packages
are solo-authored (e.g.,
[crul](https://CRAN.R-project.org/package=crul)). These results
suggested that the bipartite network can identify productive and
influential authors even without a high number of collaborators.

# Discussion

The growing usage of R in data science is tightly associated with the
increasing growth of the R ecosystem. With the rich amount of
information on CRAN, this paper shows the main trends among the R
developers and their packages.

Based on the package descriptions, we investigated the popular topics in
the R ecosystem. Results identified a wide range of topics including
various statistical methods (e.g., Cluster Analysis, Machine Learning,
Bayesian Estimation, and Network Analysis) across different fields
(e.g., Genetics, Environmetrics, Multivariate Analysis, and
Psychometrics). Moreover, there were also packages for providing data
sets, helping access to websites and online services, and improving
computational efficiency. Some of these 19 topics are similar to the
topics identified in the data science curricula [@zhang2021data]
including *Machine Learning* and *Data Visualization, Result
Presentation, and Interactive Web Applications*.

Using network analysis, we explored the influential packages and authors
based on package dependencies and authorships. The results highlighted
the crucial role of the base and recommended R packages in developing R
packages, with 12 out of the 29 base and recommended packages ranked in
the top 50 by at least two indexes. In addition to the packages shipped
alongside base R, we also identified some important CRAN packages that
support the development of R in various topics. Many influential
packages were related to *Data Visualization, Result Presentation, and
Interactive Web Applications* and *Data Import, Export, and Wrangling*
topics. These results were similar to the finding that influential
authors co-developed many important packages of these two topics.

Our findings also indicated that the contributors of R, developing from
the R Core team, now have become a worldwide community, and some of them
are organizations. Many of these influential authors are from RStudio or
the R Core team and lead the development across many topics. For
example, Yihui Xie, the creator of
[knitr](https://CRAN.R-project.org/package=knitr) and many R
markdown-related packages, facilitates the development of reproducible
research. While some of these influential contributors are from central
positions in the author collaboration network, we also identified many
productive authors with relatively few collaborators through the
bipartite network of packages and authors.

## Limitations and Future Directions

There are a few of limitations in the current work. First, we
investigated the influential packages from the perspective of the
developer community rather than the user community. To illustrate, we
focused on identifying which packages are used by other packages (i.e.,
in the package dependency network). However, packages with high
influence for developers may differ from those for the user community.
Future studies are needed to explore important packages based on the
usage data (e.g., citations, number of times mentioned on Twitter).
Second, package dependency relationships cannot distinguish between
dependencies required for publishing the package, such as vignette
generation, and those needed for developing utilities. To better
understand the relationships of packages based on their functionality,
future study can explore the similarity between packages based on text
analysis of reference manuals or vignettes. Third, we only included the
R packages on CRAN or embedded in the R source code. There has already
been a trend of releasing packages on GitHub and R-universe (a personal
R package repository). Numerous GitHub packages and their information
(e.g., contributors, commits, stars, forks) could be a rich resource for
future research to understand the development and importance of R
packages. Forth, as suggested by a referee, future studies can compare R
and other software communites (e.g., Python). Fifth, this paper was
limited by the timing of data extraction and did not include the state
of the R community in the past. Future research are suggested to conduct
longitudinal analysis of the R community to understand how it developed
over time.

This paper also provides directions for the development of an R package
recommendation system. As @RJ-2018-058 suggested, with the growth of the
R ecosystems, it becomes difficult for the users to search for specific
packages on CRAN. The flat organization of R packages, as well as the
sorting system based on name or the date of publication, pose a big
challenge for searching. It has been proposed to add keywords or tags
for packages to help organize and search packages [@RJ-2018-058]. Based
on the results of the current paper, future research is suggested to
develop a package recommendation system using the information on CRAN.
Specifically, the topic modeling can help identify packages related to
different topics and could also be an effective way for automatically
tagging. Network analysis can also help understand the relationships
among packages. Methods based on network analysis such as latent space
modeling may help quantify the closeness of two packages and provide
recommendations.

## Concluding Remarks

This paper depicts a general picture of the R developer community based
on information on CRAN. Results identified the popular topics of the R
ecosystem. Investigation of influential packages and authors also
contributes to the understanding of the development of the R community.
It is the efforts from these experts with various backgrounds that lead
to the prosperity of the R ecosystem. Moreover, results of the current
study highlight the direction for developing a package recommendation
system.

## Acknowledgment

This work is supported by a grant from the Department of Education
(R305D210023) and the Notre Dame International at the University of
Notre Dame. However, the contents of the study do not necessarily
represent the policy of the Department of Education, and you should not
assume endorsement by the Federal Government.

::: multicols
2
:::

# Appendix

::: center
[]{#tab:rank_pkg label="tab:rank_pkg"}
:::

::: center
[]{#tab:rank2_pkg label="tab:rank2_pkg"}

*Note.* \*[Base and recommended R
packages](https://stat.ethz.ch/R-manual/R-devel/doc/html/packages.html)
are part of R source code.
:::

::: center
[]{#tab:rank_aut label="tab:rank_aut"}
:::

::: center
[]{#tab:rank2_aut label="tab:rank2_aut"}
:::

::: center
[]{#tab:rank_bi_aut label="tab:rank_bi_aut"}
:::
