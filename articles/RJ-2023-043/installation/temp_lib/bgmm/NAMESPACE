export(
   # fit for single model 
   belief, soft, supervised, semisupervised, unsupervised, 

   # fit for list of  models 
   softList, beliefList, mModelList, semisupervisedList, unsupervisedList,

   # predict for model
   predict.mModel,
   
   # initialize model parameters
   init.model.params.knowns, init.model.params,

   # plot single model or list of models
   plot.mModel, plotGIC, plot.mModelList,
   getGIC, getDF, crossval,

   # utils
   map, loglikelihood.mModel, 
   chooseModels, chooseOptimal,
   getModelStructure,
   simulateData, determinant.numeric,
   DEprobs
)
S3method(determinant, numeric)
S3method(plot, mModel)
S3method(plot, mModelList)
S3method(predict, mModel)
import(car)
import(combinat)
import(lattice)
import(mvtnorm)
importFrom("grDevices", "rgb")
importFrom("graphics", "abline", "dotchart", "matplot", "mtext", "par",
          "plot", "points", "rug")
importFrom("stats", "cov", "dist", "dnorm", "kmeans", "prcomp",
          "predict", "quantile", "rexp", "rnorm", "var",
          "weighted.mean")
importFrom("utils", "tail")

