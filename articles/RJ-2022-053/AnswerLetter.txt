THIS LETTER CONTAINS THE DETAILS OF THE RESPONSE TO THE MINOR REVISION ASKED BY REVIEWERS.I have now had a chance to go through the response letter and the updated paper. While I believe the new version shows improvements over the previous version, I think it would still require some additional adjustments.Judging from the response comments, it seems that reviewer 1 also made comments regarding comparison with other available packages that deal with similar type of problems. I have read the additions in page 1 regarding mentioned by the authors, but I believe that the paper would greatly benefit from adding a bit more of comparison with other available packages. I don’t think it would need to be necessarily a performance comparison, but instead simply summarizing what other related methods are already available and how the functionalities provided by the author’s package differ would be something quite useful.Even if other packages aim to achieve the same goal, but through different methodologies/approaches, summarizing how the authors’ package differs would be of use. The authors themselves have mentioned some advantages in the response letter, which could be as well mentioned in this brief comparison with other available packages. I do not think it needs to be long, not even its own section. Just one paragraph in the conclusion section would be OK. But I think it would be important to add this since, at least in my experience, having this sort of comparison helps a lot to get a broader view of how the presented package fits into the already available toolbox, and helps to decide how to implement it in a real workflow. --------------------------------MY RESPONSE: I HAVE INCLUDED IN THE CONCLUSIONS SECTION...As was stated in the Introduction section, the fregre.glm function of the fda.usc package aim to achieve the same goal as the functions included in logitFD package, but through different point of view: fregre.glm use a discrete based methodology of functional data and logitFD functions use a purely functional approach using fd objects from the fda package. This approach makes the functional models of scalar response to suffer of multicollinearity problems with the inaccurate estimation of the functional parameters as a consequence (see Escabias et al. 2004). Two solutions based on functional PCA are implemented in logitFD package: (1) classic functional PCA and (2) filtered functional PCA. Each of PCA methods have been revealed to be useful in a different aspect: the first allow a lower estimation error of the basic coefficients of the functional parameters, while the second allow a lower estimation error of the proper curve, in terms of mean integrated quadratic error (see Escabias et al. 2004). Moreover the literature has also shown for methods involving principal components, that sometimes principal components with low variability explanation can be good predictors of the response, so a stepwise selection method of functional principal components has been included. So the big difference among logitFD functions and fregre.glm is that all the mentioned issues are addressed in the logitFD package and solved in an fast and transparent way. Finally it is important to point out that the output of the functional elements of the logitFD functions (as the functional parameters) are also fd objects and therefore all the functions of the fda package could be used with them for plotting, evaluating, etc.---------------------------------One the paragraphs by the end of the conclusion reads:"In short, logitFD package provides its users with a large range of possibilities to deal with the functional logit regression model by considering the basis expansion of sample curves and the functional principal component analysis. As far as we know, it is the first package available in R-Cran devoted to this problem. For this reason, and due to logit regression is highly considered in real problems, we think that the current manuscript can be very interesting for the readers given that they could use it as reference manual in their analysis"However, I think it would be much better if instead of just stating that logitFD is the only package that provides this sort of functionality, the authors mentioned some other packages that provide related functionality and then explained the differences either in the final results, the goal, or the exact methodology (as mentioned before, even if other packages provide very similar functionality but through a different methodology/approach, explaining this sort of difference would be enough in itself, since it would then allow readers to make a choice of the best tool for each case).----------------------------------MY RESPONSE: I HAVE INCLUDED IN THE CONCLUSIONS SECTION...In short, logitFD package provides its users with the possibilities to deal with the functional logit regression model from basis expansion methodology of sample curves and solving in a fast and transparent way, the problems that arise through functional principal component analysis. In our opinion, if we wanted to solve the same problems by using alternative R functions with similar goal, it would be necessary give many steps that would make the process to be highly tedious. For this reason, and due to logit regression is highly considered in real problems, we think that the current manuscript can be very interesting for the readers given that they could use it as reference manual in their analysis".----------------------------------I also think the summary of workflow in bullet points in the conclusion certainly helps. However, what I think would be best for non-experts in the field is a simpler schematics, probably something like a flow-chart diagram, showing the main steps in the workflow (maybe with branching points to represent the different options of the package, representing different choices that a user might make). It would be better if this simplified diagram did not get into too many technical aspects and formal explanations; the main goal would be to convey a broad overview of the main steps to a non-expert reader. -----------------------------------MY RESPONSE: I 	HAVE REPLACED THE BULLET POINTS BY A DIAGRAM IN THE CONCLUSIONS SECTION----------------------------------Finally, regarding my previous comments on improving R code, I think it would be quite reasonable to ask that these changes are introduced before acceptance. They basically refer to removing 2 types of patterns: sequential assignments inside for loops, and using lists when atomic vectors would be suitable. I think these are not hard to fix, and they would improve the performance and readability of the code (specially removing sequential assignments within loops; several of these can be changed by vectorized operations as I mentioned in the example in the 1st review).-------------------------MY RESPONSE:After revising the R code, in my opinion the proposed chage would make the function do not work properly. The proposed chage is that in lines 115-118 of function logitFD.pc.R, we have:Comp <- list()for(i in 1:length(FDobj)) {Comp[[i]] <- names(scores[[i]])}This could probably be replaced by just Comp <- names(scores)The scores object is a list of matrices or data.frames containing each one of its elements a matrix with different number of columns and also different names. The Comp object must be a list of vectors containing each vector the column names of each one of the marices in scores. This is the reason why a list and a loop is used. For example, the first matrix of scores could have as column names ("A1","A2","A3","A4"), the second matrix could have as column names ("B1","B2") and the third one could have ("C1","C2","C3"). So, the first vector of Comp should be a vector of characters ("A1","A2","A3","A4"), the second vector should have the characters ("B1","B2") and the third one should have the characters ("C1","C2","C3"). If I use Comp <- names(scores) I would obtain a vector with the names of the list scores.If I am wrong please, let me know.-------------------------Overall, I would say there are 3 points that should be addressed before acceptance:Adding a clearer short comparison with related packagesAdding a flow-chart or similar type of figure depicting the main steps in the workflow (without getting into technical descriptions)Fixing the mentioned patterns in the code